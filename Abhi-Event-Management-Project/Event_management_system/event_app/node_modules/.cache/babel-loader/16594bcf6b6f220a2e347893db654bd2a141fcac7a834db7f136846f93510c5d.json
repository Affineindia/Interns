{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Raksha Rajanna\\\\Desktop\\\\Event_Management_system\\\\event_app\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport EventList from \"./eventlist\";\nimport { Bar } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport \"./dashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardAndEvents = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(\"Event\");\n  const [events, setEvents] = useState([]);\n  const [eventsThisWeek, setEventsThisWeek] = useState(0);\n  const [tomorrowEvents, setTomorrowEvents] = useState([]);\n\n  // Fetch events data for Dashboard\n  React.useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/events\");\n        const allEvents = response.data;\n        setEvents(allEvents);\n\n        // Calculate events this week\n        const today = new Date();\n        const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + 1)); // Monday\n        const endOfWeek = new Date(today.setDate(startOfWeek.getDate() + 6)); // Sunday\n\n        const thisWeekEvents = allEvents.filter(event => {\n          const eventDate = new Date(event.dateandtime);\n          return eventDate >= startOfWeek && eventDate <= endOfWeek;\n        });\n        setEventsThisWeek(thisWeekEvents.length);\n\n        // Get tomorrow's events\n        const tomorrow = new Date();\n        tomorrow.setDate(tomorrow.getDate() + 1);\n        const tomorrowEvents = allEvents.filter(event => {\n          const eventDate = new Date(event.dateandtime);\n          return eventDate.toDateString() === tomorrow.toDateString();\n        });\n        setTomorrowEvents(tomorrowEvents);\n      } catch (error) {\n        console.error(\"Error fetching events:\", error);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  // Chart data\n  const chartData = {\n    labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\n    datasets: [{\n      label: \"Events This Week\",\n      data: Array(7).fill(0).map((_, index) => {\n        const dayStart = new Date();\n        dayStart.setDate(dayStart.getDate() - dayStart.getDay() + index + 1);\n        const dayEnd = new Date(dayStart);\n        dayEnd.setHours(23, 59, 59, 999);\n        return events.filter(event => {\n          const eventDate = new Date(event.dateandtime);\n          return eventDate >= dayStart && eventDate <= dayEnd;\n        }).length;\n      }),\n      backgroundColor: \"#4CAF50\"\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tabs-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"tabs-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === \"Dashboard\" ? \"active\" : \"\",\n        onClick: () => setActiveTab(\"Dashboard\"),\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: activeTab === \"Events\" ? \"active\" : \"\",\n        onClick: () => setActiveTab(\"Events\"),\n        children: \"Events\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [activeTab === \"Dashboard\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Number of Events This Week: \", eventsThisWeek]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Bar, {\n            data: chartData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tomorrow-notifications\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Tomorrow's Events\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), tomorrowEvents.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: tomorrowEvents.map(event => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [event.event_name, \" at \", new Date(event.dateandtime).toLocaleTimeString()]\n            }, event.event_id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No events scheduled for tomorrow.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), activeTab === \"Events\" && /*#__PURE__*/_jsxDEV(EventList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardAndEvents, \"qtKb9ZDWc0UaO4Cyw3rpn849jUs=\");\n_c = DashboardAndEvents;\nexport default DashboardAndEvents;\nvar _c;\n$RefreshReg$(_c, \"DashboardAndEvents\");","map":{"version":3,"names":["React","useState","EventList","Bar","axios","jsxDEV","_jsxDEV","DashboardAndEvents","_s","activeTab","setActiveTab","events","setEvents","eventsThisWeek","setEventsThisWeek","tomorrowEvents","setTomorrowEvents","useEffect","fetchEvents","response","get","allEvents","data","today","Date","startOfWeek","setDate","getDate","getDay","endOfWeek","thisWeekEvents","filter","event","eventDate","dateandtime","length","tomorrow","toDateString","error","console","chartData","labels","datasets","label","Array","fill","map","_","index","dayStart","dayEnd","setHours","backgroundColor","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","event_name","toLocaleTimeString","event_id","_c","$RefreshReg$"],"sources":["C:/Users/Raksha Rajanna/Desktop/Event_Management_system/event_app/src/components/dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport EventList from \"./eventlist\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\n  \r\n  \r\nimport axios from \"axios\";\r\nimport \"./dashboard.css\";\r\n\r\nconst DashboardAndEvents = () => {\r\n  const [activeTab, setActiveTab] = useState(\"Event\");\r\n  const [events, setEvents] = useState([]);\r\n  const [eventsThisWeek, setEventsThisWeek] = useState(0);\r\n  const [tomorrowEvents, setTomorrowEvents] = useState([]);\r\n\r\n  // Fetch events data for Dashboard\r\n  React.useEffect(() => {\r\n    const fetchEvents = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/events\");\r\n        const allEvents = response.data;\r\n        setEvents(allEvents);\r\n\r\n        // Calculate events this week\r\n        const today = new Date();\r\n        const startOfWeek = new Date(today.setDate(today.getDate() - today.getDay() + 1)); // Monday\r\n        const endOfWeek = new Date(today.setDate(startOfWeek.getDate() + 6)); // Sunday\r\n\r\n        const thisWeekEvents = allEvents.filter((event) => {\r\n          const eventDate = new Date(event.dateandtime);\r\n          return eventDate >= startOfWeek && eventDate <= endOfWeek;\r\n        });\r\n\r\n        setEventsThisWeek(thisWeekEvents.length);\r\n\r\n        // Get tomorrow's events\r\n        const tomorrow = new Date();\r\n        tomorrow.setDate(tomorrow.getDate() + 1);\r\n        const tomorrowEvents = allEvents.filter((event) => {\r\n          const eventDate = new Date(event.dateandtime);\r\n          return eventDate.toDateString() === tomorrow.toDateString();\r\n        });\r\n\r\n        setTomorrowEvents(tomorrowEvents);\r\n      } catch (error) {\r\n        console.error(\"Error fetching events:\", error);\r\n      }\r\n    };\r\n\r\n    fetchEvents();\r\n  }, []);\r\n  \r\n\r\n  // Chart data\r\n  const chartData = {\r\n    labels: [\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\", \"Sunday\"],\r\n    datasets: [\r\n      {\r\n        label: \"Events This Week\",\r\n        data: Array(7).fill(0).map((_, index) => {\r\n          const dayStart = new Date();\r\n          dayStart.setDate(dayStart.getDate() - dayStart.getDay() + index + 1);\r\n          const dayEnd = new Date(dayStart);\r\n          dayEnd.setHours(23, 59, 59, 999);\r\n\r\n          return events.filter((event) => {\r\n            const eventDate = new Date(event.dateandtime);\r\n            return eventDate >= dayStart && eventDate <= dayEnd;\r\n          }).length;\r\n        }),\r\n        backgroundColor: \"#4CAF50\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div className=\"tabs-container\">\r\n      <header className=\"tabs-header\">\r\n        <button className={activeTab === \"Dashboard\" ? \"active\" : \"\"} onClick={() => setActiveTab(\"Dashboard\")}>\r\n          Dashboard\r\n        </button>\r\n        <button className={activeTab === \"Events\" ? \"active\" : \"\"} onClick={() => setActiveTab(\"Events\")}>\r\n          Events\r\n        </button>\r\n      </header>\r\n\r\n      <div className=\"tab-content\">\r\n        {activeTab === \"Dashboard\" && (\r\n          <div className=\"dashboard\">\r\n            <h2>Dashboard</h2>\r\n            <p><strong>Number of Events This Week: {eventsThisWeek}</strong></p>\r\n            <div className=\"chart-container\">\r\n              <Bar data={chartData} />\r\n            </div>\r\n            <div className=\"tomorrow-notifications\">\r\n              <h3>Tomorrow's Events</h3>\r\n              {tomorrowEvents.length > 0 ? (\r\n                <ul>\r\n                  {tomorrowEvents.map((event) => (\r\n                    <li key={event.event_id}>\r\n                      {event.event_name} at {new Date(event.dateandtime).toLocaleTimeString()}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              ) : (\r\n                <p>No events scheduled for tomorrow.</p>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === \"Events\" && <EventList />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardAndEvents;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}